[coverage:run]
source = .
omit =
    tests/*
    */tests/*
    */test_*.py
    setup.py
    */venv/*
    */.venv/*
    */__pycache__/*
    */build/*
    */dist/*
    */.git/*
    */.tox/*
    */node_modules/*
    */.pytest_cache/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

[tool:pytest]
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*
addopts =
    --verbose
    --tb=short
    --strict-markers
    --disable-warnings
    --cov=.
    --cov-report=html:htmlcov
    --cov-report=term-missing
    --cov-report=xml
    --cov-fail-under=80
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    unit: marks tests as unit tests
    gpu: marks tests that require GPU
    api: marks tests that test API endpoints
    mock: marks tests that use mocking

[flake8]
max-line-length = 88
extend-ignore = E203, W503, E501
exclude =
    .git,
    __pycache__,
    build,
    dist,
    *.egg-info,
    .venv,
    venv,
    .tox,
    docs,
    .pytest_cache,
    htmlcov,
    node_modules

[mypy]
python_version = 3.8
warn_return_any = True
warn_unused_configs = True
disallow_untyped_defs = True
disallow_incomplete_defs = True
check_untyped_defs = True
disallow_untyped_decorators = True
no_implicit_optional = True
warn_redundant_casts = True
warn_unused_ignores = True
warn_no_return = True
warn_unreachable = True
strict_equality = True
show_error_codes = True

[[mypy.overrides]]
module = [
    "demucs.*",
    "funasr.*",
    "edge_tts.*",
    "yt_dlp.*",
    "moviepy.*",
    "gradio.*",
    "whisperx.*",
    "deep_translator.*",
    "openai.*",
    "pydub.*",
    "librosa.*",
    "soundfile.*",
    "tqdm.*",
    "ollama.*",
]
ignore_missing_imports = true